
# spring:
#   data:
#       mongodb: # mongo configuration
#         username: ${NOTIF_MONGODB_USERNAME:root}
#         password: ${NOTIF_MONGODB_PASSWORD:root}
#         host: ${NOTIF_MONGODB_HOST:localhost}
#         port: ${NOTIF_MONGODB_PORT:27017}
#         database: ${NOTIF_MONGODB_DB:notification_db}
#         authentication-database: ${NOTIF_MONGODB_AUTH_DB:admin}
#   kafka:
#     consumer:
#       bootstrap-servers: localhost:9092
#       group-id: paymentGroup,orderGroup
#       auto-offset-reset: earliest
#       key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#       value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#       properties:
#         spring.json.trusted.packages: '*'
#         spring.json.type.mapping: orderConfirmation:com.diploma.notification_service.models.OrderConfirmation,paymentConfirmation:com.diploma.notification_service.models.PaymentConfirmation

# server: 
#     port: ${NOTIF_SERVICE_PORT:8257}

spring:
  application:
    name: notification-service
  data:
    mongodb: # mongo configuration
      username: ${MONGODB_USERNAME:root}
      password: ${MONGODB_PASSWORD:root}
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DB:notification_db}
      authentication-database: ${MONGODB_AUTH_DB:admin}
  kafka:
    consumer:
      bootstrap-servers: host.docker.internal:9092
      group-id: paymentGroup,orderGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: orderConfirmation:com.diploma.notification_service.models.OrderConfirmation,paymentConfirmation:com.diploma.notification_service.models.PaymentConfirmation

management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include:
        - prometheus

server: 
    port: ${NOTIF_SERVICE_PORT:8257}
