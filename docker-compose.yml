version: '3.8'

services:
  postgresql:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  # pgadmin:
  #   container_name: ${PGADMIN_CONTAINER_NAME:-ms_pgadmin}
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #   volumes:
  #     - pgadmin:${PGADMIN_VOLUME:-/var/lib/pgadmin}
  #   ports:
  #     - "${PGADMIN_PORT:-5050}:80"
  #   networks:
  #     - microservices-net
  #   restart: unless-stopped

  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-root}

  # i prefer to use vscode extension
  # mongo-express:
  #   image: mongo-express
  #   container_name: mongo_express
  #   restart: always
  #   ports:
  #     - "${MONGO_EXPRESS_PORT:-8081}:8081"
  #   environment:
  #     ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME:-root}
  #     ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD:-root}
  #     ME_CONFIG_MONGODB_SERVER: mongodb

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - microservices-net
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      
    ports:
      - "9092:9092"
    networks:
      - microservices-net
    restart: unless-stopped

  # i prefer to use vscode extension from confluent to check detail of cluster, but u can use this ui
  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka_ui
  #   depends_on:
  #     - kafka
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
  #   ports:
  #     - "8082:8080"
  #   networks:
  #     - microservices-net
  #   restart: unless-stopped
  
  # Distributed log tracing
  zipkin:
      image: openzipkin/zipkin
      container_name: zipkin
      ports:
        - "9411:9411"
      networks:
        - microservices-net
      restart: unless-stopped


networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  # pgadmin:
  mongo: